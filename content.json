[{"title":"Project Euler 021","date":"2018-03-30T17:26:48.000Z","path":"2018/03/31/Project-Euler-021/","permalink":"onlookerliu.github.io/2018/03/31/Project-Euler-021/","excerpt":"ProblemLet $d(n)$ be defined as the sum of proper divisors of $n$ (numbers less than $n$ which divide evenly into $n$). If $d(a) = b$ and $d(b) = a$, where $a \\neq b$, then $a$ and $b$ are an amicable pair and each of $a$ and $b$ are called amicable numbers. For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 and 110; therefore $d(220) = 284$. The proper divisors of 284 are 1, 2, 4, 71 and 142; so $d(284) = 220$. Evaluate the sum of all the amicable numbers under 10000.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"LeetCode Notes 021","date":"2018-03-29T17:39:53.000Z","path":"2018/03/30/LeetCode-Notes-021/","permalink":"onlookerliu.github.io/2018/03/30/LeetCode-Notes-021/","excerpt":"Counting BitsGiven a non negative integer number num. For every numbers i in the range 0 ≤ i ≤ num calculate the number of 1’s in their binary representation and return them as an array. Example:For num = 5 you should return [0,1,1,2,1,2]. Follow up: It is very easy to come up with a solution with run time $O(n*sizeof(integer))$. But can you do it in linear time $O(n)$ /possibly in a single pass? Space complexity should be $O(n)$. Can you do it like a boss? Do it without using any builtin function like __builtin_popcount in c++ or in any other language.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"Project-Euler-020","date":"2018-03-29T11:19:17.000Z","path":"2018/03/29/Project-Euler-020/","permalink":"onlookerliu.github.io/2018/03/29/Project-Euler-020/","excerpt":"Problem$n!$ means $n \\times (n - 1) \\times … \\times 3 \\times 2 \\times 1$.Find the sum of the digits in the number $100!$.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Simple Implement of Spring MVC","date":"2018-03-26T03:22:47.000Z","path":"2018/03/26/Simple-Implement-of-Spring-MVC/","permalink":"onlookerliu.github.io/2018/03/26/Simple-Implement-of-Spring-MVC/","excerpt":"简单模拟Spring MVC在Spring MVC中，将一个普通的java类标注上Controller注解之后，再将类中的方法使用RequestMapping注解标注，那么这个普通的java类就够处理Web请求，示例代码如下： 1234567891011121314151617181920/** * 使用Controller注解标注LoginUI类 */@Controllerpublic class LoginUI &#123; //使用RequestMapping注解指明forward1方法的访问路径 @RequestMapping(\"LoginUI/Login2\") public View forward1()&#123; //执行完forward1方法之后返回的视图 return new View(\"/login2.jsp\"); &#125; //使用RequestMapping注解指明forward2方法的访问路径 @RequestMapping(\"LoginUI/Login3\") public View forward2()&#123; //执行完forward2方法之后返回的视图 return new View(\"/login3.jsp\"); &#125; &#125; spring通过java annotation就可以注释一个类为action ，在方法上添加上一个java annotation 就可以配置请求的路径了，那么这种机制是如何实现的呢，今天我们使用”自定义注解+Servlet”来简单模拟一下Spring MVC中的这种注解配置方式。","tags":[{"name":"Java","slug":"Java","permalink":"onlookerliu.github.io/tags/Java/"}]},{"title":"LeetCode Notes 020","date":"2018-03-24T16:45:22.000Z","path":"2018/03/25/LeetCode-Notes-020/","permalink":"onlookerliu.github.io/2018/03/25/LeetCode-Notes-020/","excerpt":"Count of Range SumGiven an integer array nums, return the number of range sums that lie in [lower, upper] inclusive.Range sum S(i, j) is defined as the sum of the elements in nums between indices i and j (i ≤ j), inclusive. Note:A naive algorithm of $O(n^2)$ is trivial. You MUST do better than that. Example:Given nums = [-2, 5, -1], lower = -2, upper = 2, Return 3.The three ranges are : [0, 0], [2, 2], [0, 2] and their respective sums are: -2, -1, 2.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 019","date":"2018-03-23T16:35:32.000Z","path":"2018/03/24/LeetCode-Notes-019/","permalink":"onlookerliu.github.io/2018/03/24/LeetCode-Notes-019/","excerpt":"Count And SayThe count-and-say sequence is the sequence of integers with the first five terms as following: 123451. 12. 113. 214. 12115. 111221 1 is read off as &quot;one 1&quot; or 11.11 is read off as &quot;two 1s&quot; or 21.21 is read off as &quot;one 2, then one 1&quot; or 1211. Given an integer $n$, generate the $n^th$ term of the count-and-say sequence. Note: Each term of the sequence of integers will be represented as a string. Example 1:12Input: 1Output: &quot;1&quot; Example 2:12Input: 4Output: &quot;1211&quot;","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 018","date":"2018-03-22T16:28:13.000Z","path":"2018/03/23/LeetCode-Notes-018/","permalink":"onlookerliu.github.io/2018/03/23/LeetCode-Notes-018/","excerpt":"Convert Sorted Array to Binary Search TreeGiven an array where elements are sorted in ascending order, convert it to a height balanced BST. For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1. Example:123456789Given the sorted array: [-10,-3,0,5,9],One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST: 0 / \\ -3 9 / / -10 5","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 017","date":"2018-03-21T16:18:55.000Z","path":"2018/03/22/LeetCode-Notes-017/","permalink":"onlookerliu.github.io/2018/03/22/LeetCode-Notes-017/","excerpt":"Continuous Subarray SumGiven a list of non-negative numbers and a target integer k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to the multiple of k, that is, sums up to n*k where n is also an integer. Example 1:123Input: [23, 2, 4, 6, 7], k=6Output: TrueExplanation: Because [2, 4] is a continuous subarray of size 2 and sums up to 6. Example 2:123Input: [23, 2, 6, 4, 7], k=6Output: TrueExplanation: Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42. Note: The length of the array won’t exceed 10,000. You may assume the sum of all the numbers is in the range of a signed 32-bit integer.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 016","date":"2018-03-21T15:39:32.000Z","path":"2018/03/21/LeetCode-Notes-016/","permalink":"onlookerliu.github.io/2018/03/21/LeetCode-Notes-016/","excerpt":"Container With Most WaterGiven $n$ non-negative integers $a_1, a_2, …, a_n$, where each represents a point at coordinate $(i, a_i)$. $n$ vertical lines are drawn such that the two endpoints of line $i$ is at $(i, a_i)$ and $(i, 0)$. Find two lines, which together with x-axis forms a container, such that the container contains the most water. Note: You may not slant the container and $n$ is at least 2.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 015","date":"2018-03-20T15:27:23.000Z","path":"2018/03/20/LeetCode-Notes-015/","permalink":"onlookerliu.github.io/2018/03/20/LeetCode-Notes-015/","excerpt":"Construct Binary Tree from Inorder and Postorder TraversalGiven inorder and postorder traversal of a tree, construct the binary tree. Note:You may assume that duplicates do not exist in the tree. For example, given12inorder = [9,3,15,20,7]postorder = [9,15,7,20,3] Return the following binary tree:12345 3 / \\9 20 / \\ 15 7","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 014","date":"2018-03-19T15:08:38.000Z","path":"2018/03/19/LeetCode-Notes-014/","permalink":"onlookerliu.github.io/2018/03/19/LeetCode-Notes-014/","excerpt":"CombinationsGiven two integers $n$ and $k$, return all possible combinations of $k$ numbers out of 1 … $n$. For example:If n = 4 and k = 2, a solution is:12345678[ [2,4], [3,4], [2,3], [1,2], [1,3], [1,4],]","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 013","date":"2018-03-18T14:13:47.000Z","path":"2018/03/18/LeetCode-Notes-013/","permalink":"onlookerliu.github.io/2018/03/18/LeetCode-Notes-013/","excerpt":"Combination Sum IIGiven a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. Each number in C may only be used once in the combination. Note: All numbers (including target) will be positive integers. The solution set must not contain duplicate combinations. For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8,A solution set is:123456[ [1, 7], [1, 2, 5], [2, 6], [1, 1, 6]]","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 012","date":"2018-03-16T17:16:09.000Z","path":"2018/03/17/LeetCode-Notes-012/","permalink":"onlookerliu.github.io/2018/03/17/LeetCode-Notes-012/","excerpt":"Clone GraphClone an undirected graph. Each node in the graph contains a label and a list of its neighbors. OJ’s undirected graph serialization:Nodes are labeled uniquely. We use # as a separator for each node, and , as a separator for node label and each neighbor of the node.As an example, consider the serialized graph {0,1,2#1,2#2,2}. The graph has a total of three nodes, and therefore contains three parts as separated by #. First node is labeled as 0. Connect node 0 to both nodes 1 and 2. Second node is labeled as 1. Connect node 1 to node 2. Third node is labeled as 2. Connect node 2 to node 2 (itself), thus forming a self-cycle. Visually, the graph looks like the following: 123456 1 / \\ / \\0 --- 2 / \\ \\_/","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 011","date":"2018-03-16T06:22:16.000Z","path":"2018/03/16/LeetCode-Notes-011/","permalink":"onlookerliu.github.io/2018/03/16/LeetCode-Notes-011/","excerpt":"Bulb SwitcherThere are n bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it’s off or turning off if it’s on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last bulb. Find how many bulbs are on after n rounds. Example:12345678Given n = 3. At first, the three bulbs are [off, off, off].After first round, the three bulbs are [on, on, on].After second round, the three bulbs are [on, off, on].After third round, the three bulbs are [on, off, off]. So you should return 1, because there is only one bulb is on.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 010","date":"2018-03-15T06:10:46.000Z","path":"2018/03/15/LeetCode-Notes-010/","permalink":"onlookerliu.github.io/2018/03/15/LeetCode-Notes-010/","excerpt":"Binary Tree Zigzag Level Order TraversalGiven a binary tree, return the zigzag level order traversal of its nodes’ values. (ie, from left to right, then right to left for the next level and alternate between). For example:Given binary tree [3,9,20,null,null,15,7]12345 3 / \\9 20 / \\ 15 7 return its zigzag level order traversal as:12345[ [3], [20,9], [15,7]]","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 009","date":"2018-03-14T03:19:26.000Z","path":"2018/03/14/LeetCode-Notes-009/","permalink":"onlookerliu.github.io/2018/03/14/LeetCode-Notes-009/","excerpt":"Binary Tree Postorder TraversalGiven a binary tree, return the postorder traversal of its nodes’ values. For example:Given binary tree [1,null,2,3] 123451 \\ 2 /3 return [3,2,1]","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"Project-Euler-019","date":"2018-03-13T14:01:49.000Z","path":"2018/03/13/Project-Euler-019/","permalink":"onlookerliu.github.io/2018/03/13/Project-Euler-019/","excerpt":"ProblemYou are given the following information,but you may prefer to do some research for yourself. 1 Jan 1900 was a Monday. Thirty days has September, April, June and November. All the rest have thirty-one, Saving February alone, Which has twenty-eight, rain or shine. And on leap years, twenty-nine. A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400. How many Sundays fell on the first of the month duringthe twentieth century (1 Jan 1901 to 31 Dec 2000)?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-018","date":"2018-03-13T13:50:28.000Z","path":"2018/03/13/Project-Euler-018/","permalink":"onlookerliu.github.io/2018/03/13/Project-Euler-018/","excerpt":"ProblemBy starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23. 3 7 4 2 4 6 8 5 9 3 That is, $3 + 7 + 4 + 9 = 23$. Find the maximum total from top to bottom of the triangle below: 75 95 64 17 47 82 18 35 87 10 20 04 82 47 65 19 01 23 75 03 34 88 02 77 73 07 63 67 99 65 04 28 06 16 70 92 41 41 26 56 83 40 80 70 33 41 48 72 33 47 32 37 16 94 29 53 71 44 65 25 43 91 52 97 51 14 70 11 33 28 77 73 17 78 39 68 17 57 91 71 52 38 17 14 91 43 58 50 27 29 48 63 66 04 68 89 53 67 30 73 16 69 87 40 31 04 62 98 27 23 09 70 98 73 93 38 53 60 04 23","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"LeetCode Notes 008","date":"2018-03-12T13:43:39.000Z","path":"2018/03/12/LeetCode-Notes-008/","permalink":"onlookerliu.github.io/2018/03/12/LeetCode-Notes-008/","excerpt":"Binary Tree Level Order TraversalGiven a binary tree, return the level order traversal of its nodes’ values. (ie, from left to right, level by level). For example:Given binary tree [3,9,20,null,null,15,7],12345 3 / \\9 20 / \\ 15 7 return its level order traversal as:12345[ [3], [9,20], [15,7]]","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"Project-Euler-017","date":"2018-03-12T07:57:40.000Z","path":"2018/03/12/Project-Euler-017/","permalink":"onlookerliu.github.io/2018/03/12/Project-Euler-017/","excerpt":"ProblemIf the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are $3 + 3 + 5 + 4 + 4 = 19$ letters used in total. If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-016","date":"2018-03-11T07:50:31.000Z","path":"2018/03/11/Project-Euler-016/","permalink":"onlookerliu.github.io/2018/03/11/Project-Euler-016/","excerpt":"Problem$2^{15} = 32768$ and the sum of its digits is $3 + 2 + 7 + 6 + 8 = 26$. What is the sum of the digits of the number $2^{1000}$?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-015","date":"2018-03-10T07:44:16.000Z","path":"2018/03/10/Project-Euler-015/","permalink":"onlookerliu.github.io/2018/03/10/Project-Euler-015/","excerpt":"ProblemStarting in the top left corner of a 2x2 grid, there are 6 routes (without backtracking) to the bottom right corner. How many routes are there through a 20x20 grid?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-014","date":"2018-03-09T07:34:24.000Z","path":"2018/03/09/Project-Euler-014/","permalink":"onlookerliu.github.io/2018/03/09/Project-Euler-014/","excerpt":"ProblemThe following iterative sequence is defined for the set of positive integers: $$n \\rightarrow\\begin{cases}\\tfrac{n}{2} &amp; \\text{if } n \\text{ is even} \\3n+1 &amp; \\text{if } n \\text{ is odd}\\end{cases}$$ Using the rule above and starting with 13, we generate the following sequence: $$13, 40, 20, 10, 5, 16, 8, 4, 2, 1$$ It can be seen that this sequence (starting at 13 and finishing at 1) contains 10terms. Although it has not been proved yet (Collatz Problem), it is thought that allstarting numbers finish at 1. Which starting number, under one million, produces the longest chain?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-013","date":"2018-03-08T07:29:52.000Z","path":"2018/03/08/Project-Euler-013/","permalink":"onlookerliu.github.io/2018/03/08/Project-Euler-013/","excerpt":"ProblemWork out the first ten digits of the sum of the followingfifty digit numbers.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-012","date":"2018-03-07T07:24:10.000Z","path":"2018/03/07/Project-Euler-012/","permalink":"onlookerliu.github.io/2018/03/07/Project-Euler-012/","excerpt":"ProblemThe sequence of triangle numbers is generated by addingthe natural numbers. So the 7th triangle number would be$1 + 2 + 3 + 4 + 5 + 6 + 7 = 28$. The first ten terms would be: $$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, …$$ Let us list the factors of the first seven triangle numbers: 1: 1 3: 1,3 6: 1,2,3,6 10: 1,2,5,10 15: 1,3,5,15 21: 1,3,7,21 28: 1,2,4,7,14,28 We can see that 28 is the first triangle number to have overfive divisors. What is the value of the first triangle numberto have over five hundred divisors?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"LeetCode Notes 007","date":"2018-03-06T15:17:05.000Z","path":"2018/03/06/LeetCode-Notes-007/","permalink":"onlookerliu.github.io/2018/03/06/LeetCode-Notes-007/","excerpt":"Best Time to Buy and Sell Stock IISay you have an array for which the i-th element is the price of a given stock on day i. Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"Project-Euler-011","date":"2018-03-05T08:24:00.000Z","path":"2018/03/05/Project-Euler-011/","permalink":"onlookerliu.github.io/2018/03/05/Project-Euler-011/","excerpt":"ProblemIn the 20x20 grid below, four numbers along a diagonal linehave been marked in red. 08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08 49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00 81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65 52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91 22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80 24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50 32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70 67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21 24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72 21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95 78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92 16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57 86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58 19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40 04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66 88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69 04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36 20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16 20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54 01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48 The product of these numbers is $26 \\times 63 \\times 78 \\times 14 = 1788696$. What is the greatest product of four adjacent numbers in anydirection (up, down, left, right, or diagonally) in the 20x20 grid?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"LeetCode Notes 006","date":"2018-03-04T04:21:45.000Z","path":"2018/03/04/LeetCode-Notes-006/","permalink":"onlookerliu.github.io/2018/03/04/LeetCode-Notes-006/","excerpt":"Basic Calculator IIImplement a basic calculator to evaluate a simple expression string. The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero. You may assume that the given expression is always valid. Some examples:123&quot;3+2*2&quot; = 7&quot; 3/2 &quot; = 1&quot; 3+5 / 2 &quot; = 5","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 005","date":"2018-03-03T04:05:41.000Z","path":"2018/03/03/LeetCode-Notes-005/","permalink":"onlookerliu.github.io/2018/03/03/LeetCode-Notes-005/","excerpt":"Balanced Binary TreeGiven a binary tree, determine if it is height-balanced. For this problem, a height-balanced binary tree is defined as: a binary tree in which the depth of the two subtrees of every node never differ by more than 1. Example 1: Given the following tree [3,9,20,null,null,15,7]:12345 3 / \\9 20 / \\ 15 7 Return true. Example 2: Given the following tree [1,2,2,3,3,null,null,4,4]:1234567 1 / \\ 2 2 / \\ 3 3 / \\4 4 Return false.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 004","date":"2018-03-02T15:00:38.000Z","path":"2018/03/02/LeetCode-Notes-004/","permalink":"onlookerliu.github.io/2018/03/02/LeetCode-Notes-004/","excerpt":"Arithmetic SlicesA sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same. For example, these are arithmetic sequence:1231, 3, 5, 7, 97, 7, 7, 73, -1, -5, -9 The following sequence is not arithmetic.11, 1, 2, 5, 7 A zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 &lt;= P &lt; Q &lt; N. A slice (P, Q) of array A is called arithmetic if the sequence:A[P], A[p + 1], …, A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 &lt; Q. The function should return the number of arithmetic slices in the array A. Example:123A = [1, 2, 3, 4]return: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"LeetCode Notes 003","date":"2018-03-01T13:35:35.000Z","path":"2018/03/01/LeetCode-Notes-003/","permalink":"onlookerliu.github.io/2018/03/01/LeetCode-Notes-003/","excerpt":"Add two numbersYou are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Example:123Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)Output: 7 -&gt; 0 -&gt; 8Explanation: 342 + 465 = 807.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"Project-Euler-010","date":"2018-03-01T03:56:36.000Z","path":"2018/03/01/Project-Euler-010/","permalink":"onlookerliu.github.io/2018/03/01/Project-Euler-010/","excerpt":"ProblemThe sum of the primes below 10 is $2 + 3 + 5 + 7 = 17$. Find the sum of all the primes below two million.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-009","date":"2018-02-27T03:36:39.000Z","path":"2018/02/27/Project-Euler-009/","permalink":"onlookerliu.github.io/2018/02/27/Project-Euler-009/","excerpt":"ProblemA Pythagorean triplet is a set of three natural numbers, $a \\lt b \\lt c$,for which $$a^2 + b^2 = c^2$$ For example, $3^2 + 4^2 = 9 + 16 = 25 = 5^2$. There exists exactly one Pythagorean triplet for which $a + b + c = 1000$.Find the product $a \\times b \\times c$.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Simple Perceptron using Processing","date":"2018-02-25T16:22:03.000Z","path":"2018/02/26/Simple-Perceptron-using-Processing/","permalink":"onlookerliu.github.io/2018/02/26/Simple-Perceptron-using-Processing/","excerpt":"","tags":[{"name":"Java","slug":"Java","permalink":"onlookerliu.github.io/tags/Java/"},{"name":"machine learning","slug":"machine-learning","permalink":"onlookerliu.github.io/tags/machine-learning/"},{"name":"processing","slug":"processing","permalink":"onlookerliu.github.io/tags/processing/"}]},{"title":"Linear Regression in JS","date":"2018-02-23T14:51:57.000Z","path":"2018/02/23/Linear-Regression-in-JS/","permalink":"onlookerliu.github.io/2018/02/23/Linear-Regression-in-JS/","excerpt":"This code is mainly based on the p5js library, which provide us an accessible sketchbook to interactive with HTML objects.","tags":[{"name":"statistics","slug":"statistics","permalink":"onlookerliu.github.io/tags/statistics/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"},{"name":"p5js","slug":"p5js","permalink":"onlookerliu.github.io/tags/p5js/"}]},{"title":"Project-Euler-008","date":"2018-02-14T14:16:28.000Z","path":"2018/02/14/Project-Euler-008/","permalink":"onlookerliu.github.io/2018/02/14/Project-Euler-008/","excerpt":"ProblemThe four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832. 73167176531330624919225119674426574742355349194934 96983520312774506326239578318016984801869478851843 85861560789112949495459501737958331952853208805511 12540698747158523863050715693290963295227443043557 66896648950445244523161731856403098711121722383113 62229893423380308135336276614282806444486645238749 30358907296290491560440772390713810515859307960866 70172427121883998797908792274921901699720888093776 65727333001053367881220235421809751254540594752243 52584907711670556013604839586446706324415722155397 53697817977846174064955149290862569321978468622482 83972241375657056057490261407972968652414535100474 82166370484403199890008895243450658541227588666881 16427171479924442928230863465674813919123162824586 17866458359124566529476545682848912883142607690042 24219022671055626321111109370544217506941658960408 07198403850962455444362981230987879927244284909188 84580156166097919133875499200524063689912560717606 05886116467109405077541002256983155200055935729725 71636269561882670428252483600823257530420752963450 Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-007","date":"2018-02-14T14:08:11.000Z","path":"2018/02/14/Project-Euler-007/","permalink":"onlookerliu.github.io/2018/02/14/Project-Euler-007/","excerpt":"ProblemBy listing the first six prime numbers: 2, 3, 5, 7, 11, and 13,we can see that the 6th prime is 13. What is the 10001st prime number?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-006","date":"2018-02-13T13:59:55.000Z","path":"2018/02/13/Project-Euler-006/","permalink":"onlookerliu.github.io/2018/02/13/Project-Euler-006/","excerpt":"ProblemThe sum of the squares of the first ten natural numbers is, $$1^2 + 2^2 + … + 10^2 = 385$$ The square of the sum of the first ten natural numbers is, $$(1 + 2 + … + 10)^2 = 55^2 = 3025$$ Hence the difference between the sum of the squares of the first ten naturalnumbers and the square of the sum is $3025 - 385 = 2640$. Find the difference between the sum of the squares of the first one hundrednatural numbers and the square of the sum.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-005","date":"2018-02-12T13:46:16.000Z","path":"2018/02/12/Project-Euler-005/","permalink":"onlookerliu.github.io/2018/02/12/Project-Euler-005/","excerpt":"Problem2520 is the smallest number that can be divided by eachof the numbers from 1 to 10 without any remainder. What is the smallest positive number that is evenly divisibleby all of the numbers from 1 to 20?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-004","date":"2018-02-11T14:37:57.000Z","path":"2018/02/11/Project-Euler-004/","permalink":"onlookerliu.github.io/2018/02/11/Project-Euler-004/","excerpt":"ProblemA palindromic number reads the same both ways. The largest palindromemade from the product of two 2-digit numbers is $9009 = 91 \\times 99$. Find the largest palindrome made from the product of two 3-digit numbers.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-003","date":"2018-02-10T12:59:58.000Z","path":"2018/02/10/Project-Euler-003/","permalink":"onlookerliu.github.io/2018/02/10/Project-Euler-003/","excerpt":"QuestionThe prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of the number 600851475143 ?","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project-Euler-002","date":"2018-02-09T12:42:19.000Z","path":"2018/02/09/Project-Euler-002/","permalink":"onlookerliu.github.io/2018/02/09/Project-Euler-002/","excerpt":"ProblemEach new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: $$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, …$$ Find the sum of all the even-valued terms in the sequence which do not exceed four million.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"Project Euler 001","date":"2018-02-08T11:41:03.000Z","path":"2018/02/08/Project-Euler-001/","permalink":"onlookerliu.github.io/2018/02/08/Project-Euler-001/","excerpt":"QuestionIf we list all the natural numbers below 10 that are multiples of 3 or 5, weget 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.","tags":[{"name":"euler","slug":"euler","permalink":"onlookerliu.github.io/tags/euler/"},{"name":"multilingual","slug":"multilingual","permalink":"onlookerliu.github.io/tags/multilingual/"}]},{"title":"LeetCode Notes 002","date":"2017-12-29T17:39:34.000Z","path":"2017/12/30/LeetCode-Notes-002/","permalink":"onlookerliu.github.io/2017/12/30/LeetCode-Notes-002/","excerpt":"Add BinaryGiven two binary strings, return their sum (also a binary string). For example,a = “11”b = “1”Return “100”.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"A simple Metropolis-Hastings MCMC in R","date":"2017-12-28T17:47:23.000Z","path":"2017/12/29/A-simple-Metropolis-Hastings-MCMC-in-R/","permalink":"onlookerliu.github.io/2017/12/29/A-simple-Metropolis-Hastings-MCMC-in-R/","excerpt":"While there are certainly good software packages out there to do the job for you, notably BUGS or JAGS, it is instructive to program a simple MCMC yourself. In this post, I give an educational example of the Bayesian equivalent of a linear regression, sampled by an MCMC with Metropolis-Hastings steps, based on an earlier version which I did to together with Tamara Münkemüller. Since first publishing this post, I have made a few small modifications to improve clarity. A similar post on Metropolis-Hastings MCMC algorithms by Darren Wilkinson is also worth looking at. More on analyzing the results of this algorithm can be found in a recent post.","tags":[{"name":"r","slug":"r","permalink":"onlookerliu.github.io/tags/r/"}]},{"title":"Decision_Tree_Regression","date":"2017-12-28T17:45:47.000Z","path":"2017/12/29/Decision-Tree-Regression/","permalink":"onlookerliu.github.io/2017/12/29/Decision-Tree-Regression/","excerpt":"Decision Tree Regression (using DecisionTrees.jl)Adapted from http://scikit-learn.org/stable/auto_examples/tree/plot_tree_regression.html","tags":[{"name":"julia","slug":"julia","permalink":"onlookerliu.github.io/tags/julia/"}]},{"title":"Classifier_Comparison","date":"2017-12-28T17:44:21.000Z","path":"2017/12/29/Classifier-Comparison/","permalink":"onlookerliu.github.io/2017/12/29/Classifier-Comparison/","excerpt":"Classifier ComparisonAdapted from http://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html","tags":[{"name":"julia","slug":"julia","permalink":"onlookerliu.github.io/tags/julia/"}]},{"title":"Cross_Validated_Predictions","date":"2017-12-28T17:42:24.000Z","path":"2017/12/29/Cross-Validated-Predictions/","permalink":"onlookerliu.github.io/2017/12/29/Cross-Validated-Predictions/","excerpt":"Plotting Cross-Validated PredictionsAdapted from http://scikit-learn.org/stable/auto_examples/plot_cv_predict.html","tags":[{"name":"julia","slug":"julia","permalink":"onlookerliu.github.io/tags/julia/"}]},{"title":"Clustering_Comparison","date":"2017-12-28T17:39:41.000Z","path":"2017/12/29/Clustering-Comparison/","permalink":"onlookerliu.github.io/2017/12/29/Clustering-Comparison/","excerpt":"Comparing different clustering algorithms on toy datasetsAdapted from http://scikit-learn.org/stable/auto_examples/cluster/plot_cluster_comparison.html","tags":[{"name":"julia","slug":"julia","permalink":"onlookerliu.github.io/tags/julia/"}]},{"title":"DataFrame_Demo","date":"2017-12-28T17:37:43.000Z","path":"2017/12/29/DataFrame-Demo/","permalink":"onlookerliu.github.io/2017/12/29/DataFrame-Demo/","excerpt":"Credits: this code and documentation was adapted from Paul Butler’s sklearn-pandas","tags":[{"name":"julia","slug":"julia","permalink":"onlookerliu.github.io/tags/julia/"}]},{"title":"dot语法总结","date":"2017-12-27T18:48:49.000Z","path":"2017/12/28/dot语法总结/","permalink":"onlookerliu.github.io/2017/12/28/dot语法总结/","excerpt":"1.简介dot是开源工具包Graphviz上用来画图的一门脚本语言。通过布局引擎解析脚本得到图像，然后\b可以将图像导出为各种格式以满足需求。主要用于编写脚本来画各种结构示意图和流程图。","tags":[{"name":"dot","slug":"dot","permalink":"onlookerliu.github.io/tags/dot/"}]},{"title":"LeetCode Notes 001","date":"2017-12-27T17:14:13.000Z","path":"2017/12/28/LeetCode-Notes-001/","permalink":"onlookerliu.github.io/2017/12/28/LeetCode-Notes-001/","excerpt":"MatrixGiven a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell. The distance between two adjacent cells is 1.","tags":[{"name":"leetcode","slug":"leetcode","permalink":"onlookerliu.github.io/tags/leetcode/"},{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"剑指offer--JavaScript版III","date":"2017-12-27T15:55:24.000Z","path":"2017/12/27/剑指offer-JavaScript版III/","permalink":"onlookerliu.github.io/2017/12/27/剑指offer-JavaScript版III/","excerpt":"51.请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串”+100”,”5e2”,”-123”,”3.1416”和”-1E-16”都表示数值。 但是”12e”,”1a3.14”,”1.2.3”,”+-5”和”12e+4.3”都不是。","tags":[{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"剑指offer--JavaScript版II","date":"2017-12-27T15:54:21.000Z","path":"2017/12/27/剑指offer-JavaScript版II/","permalink":"onlookerliu.github.io/2017/12/27/剑指offer-JavaScript版II/","excerpt":"26.输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,b,c所能排列出来的所有字符串abc,acb,bac,bca,cab和cba。","tags":[{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"剑指offer--JavaScript版I","date":"2017-12-27T15:47:53.000Z","path":"2017/12/27/剑指offer-JavaScript版I/","permalink":"onlookerliu.github.io/2017/12/27/剑指offer-JavaScript版I/","excerpt":"1.在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","tags":[{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"30 seconds of code","date":"2017-12-25T15:24:11.000Z","path":"2017/12/25/30-seconds-of-code/","permalink":"onlookerliu.github.io/2017/12/25/30-seconds-of-code/","excerpt":"Curated collection of useful Javascript snippets that you can understand in 30 seconds or less.","tags":[{"name":"javascript","slug":"javascript","permalink":"onlookerliu.github.io/tags/javascript/"}]},{"title":"Project 4 of Statistics.md","date":"2017-12-15T09:40:41.000Z","path":"2017/12/15/Project-4-of-Statistics/","permalink":"onlookerliu.github.io/2017/12/15/Project-4-of-Statistics/","excerpt":"Homework 61. Prove that $\\hat \\sigma^2 = \\dfrac{SS_E}{(a-1)(b-1)}$ is the unbiased estimation of $\\sigma^2$","tags":[{"name":"r","slug":"r","permalink":"onlookerliu.github.io/tags/r/"},{"name":"statistic","slug":"statistic","permalink":"onlookerliu.github.io/tags/statistic/"}]},{"title":"Project 3 of Statistics.md","date":"2017-12-01T12:39:50.000Z","path":"2017/12/01/Project-3-of-Statistics/","permalink":"onlookerliu.github.io/2017/12/01/Project-3-of-Statistics/","excerpt":"Homework 513.13The gamma probability density function is $$f(y,r,\\lambda) = \\frac{\\lambda^r}{\\Gamma(r)} e^{-\\lambda y} y^{r-1}, \\quad\\text{for } y,\\lambda\\geq 0$$ Show that the gamma is a member of the exponential family.","tags":[{"name":"r","slug":"r","permalink":"onlookerliu.github.io/tags/r/"},{"name":"statistic","slug":"statistic","permalink":"onlookerliu.github.io/tags/statistic/"}]},{"title":"julia基于GLM包的线性回归","date":"2017-11-29T13:49:51.000Z","path":"2017/11/29/julia基于GLM包的线性回归/","permalink":"onlookerliu.github.io/2017/11/29/julia基于GLM包的线性回归/","excerpt":"本文利用GLM包进行简单线性回归分析，同时对模型检验以及置信区间作图。 1using GLM,DataFrames","tags":[{"name":"julia","slug":"julia","permalink":"onlookerliu.github.io/tags/julia/"}]},{"title":"Project 2 of Statistics.md","date":"2017-11-17T08:38:31.000Z","path":"2017/11/17/Project-2-of-Statistics/","permalink":"onlookerliu.github.io/2017/11/17/Project-2-of-Statistics/","excerpt":"摘要本次大作业按章节依次展示了岭估计、主成分估计、逐步回归和带示性变量的回归分析。 主要使用 dplyr 和 readxl 包导入数据并获得数据框视图；利用 MASS 和 car 包作岭迹图、主成分估计和逐步回归分析； dummies 包提供了将示性变量转换为特殊矩阵的可能；bootstrap 包帮助我们实现了 $k$ 重交叉验证。","tags":[{"name":"r","slug":"r","permalink":"onlookerliu.github.io/tags/r/"},{"name":"statistics","slug":"statistics","permalink":"onlookerliu.github.io/tags/statistics/"}]},{"title":"Assignment 2 of Advanced Computational Method","date":"2017-11-13T16:01:20.000Z","path":"2017/11/14/Assignment-2-of-Advanced-Computational-Method/","permalink":"onlookerliu.github.io/2017/11/14/Assignment-2-of-Advanced-Computational-Method/","excerpt":"Homework 3The Metropolis–Hastings algorithm works by generating a sequence of sample values in such a way that, as more and more sample values are produced, the distribution of values more closely approximates the desired distribution, $P(x)$. These sample values are produced iteratively, with the distribution of the next sample being dependent only on the current sample value (thus making the sequence of samples into a Markov chain). Specifically, at each iteration, the algorithm picks a candidate for the next sample value based on the current sample value. Then, with some probability, the candidate is either accepted (in which case the candidate value is used in the next iteration) or rejected (in which case the candidate value is discarded, and current value is reused in the next iteration)−the probability of acceptance is determined by comparing the values of the function $f(x)$ of the current and candidate sample values with respect to the desired distribution $P(x)$.","tags":[{"name":"r","slug":"r","permalink":"onlookerliu.github.io/tags/r/"},{"name":"statistics","slug":"statistics","permalink":"onlookerliu.github.io/tags/statistics/"},{"name":"computational method","slug":"computational-method","permalink":"onlookerliu.github.io/tags/computational-method/"}]},{"title":"Project 1 of Statistics.md","date":"2017-11-03T12:36:27.000Z","path":"2017/11/03/Project-1-of-Statistics/","permalink":"onlookerliu.github.io/2017/11/03/Project-1-of-Statistics/","excerpt":"一、准备阶段本次实验主要考虑影响大倪体重各体型指标的因素。我们的数据收集了112组大鲵的体重(weight)、全长(tl)、体长(bl)、头长(hl)、体高(h)、体宽(w)、尾柄长(cl)和肠长(sl)。 利用统计软件R来实现，其中用到的包有readxl, dplyr, ggplot2, car。","tags":[{"name":"r","slug":"r","permalink":"onlookerliu.github.io/tags/r/"},{"name":"statistics","slug":"statistics","permalink":"onlookerliu.github.io/tags/statistics/"}]},{"title":"Assignment 1 of Advanced Computational Method","date":"2017-10-30T15:59:42.000Z","path":"2017/10/30/Assignment-1-of-Advanced-Computational-Method/","permalink":"onlookerliu.github.io/2017/10/30/Assignment-1-of-Advanced-Computational-Method/","excerpt":"Homework 1Monte Carlo method is a method to compute the expectation of a random variable. The basic steps follow like this: draw random samples ${x_1, x_2, \\cdots, x_n}$ according to $p(x)$. derive the monte carlo estimator of $E(f)$ from $$\\hat{f}{\\text{mc}}=\\frac{1}{n}\\sum{i=1}^n f(x_i)$$","tags":[{"name":"julia","slug":"julia","permalink":"onlookerliu.github.io/tags/julia/"},{"name":"statistics","slug":"statistics","permalink":"onlookerliu.github.io/tags/statistics/"},{"name":"computational method","slug":"computational-method","permalink":"onlookerliu.github.io/tags/computational-method/"}]},{"title":"Numerical Examples in Java","date":"2017-04-04T04:10:56.000Z","path":"2017/04/04/Numerical-Examples-in-Java/","permalink":"onlookerliu.github.io/2017/04/04/Numerical-Examples-in-Java/","excerpt":"","tags":[{"name":"Java","slug":"Java","permalink":"onlookerliu.github.io/tags/Java/"}]}]